name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Run tests and build
        run: |
          npm run lint
          npm run build

      - name: Bump version
        id: version
        run: |
          npm version ${{ inputs.version }} -m "chore: release v%s"
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          echo "tag=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Push changes
        run: |
          git push origin main --follow-tags

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag (if it exists)
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags HEAD^ 2>/dev/null || echo "")

          # Generate changelog with random delimiter to avoid conflicts
          delimiter="ghadelimiter_$(uuidgen)"

          echo "notes<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT

          if [ -z "$PREVIOUS_TAG" ]; then
            # First release - show all commits (limited to 20)
            git log --pretty=format:"* %s (%h)" | head -20 >> $GITHUB_OUTPUT
          else
            # Show commits since previous tag
            git log $PREVIOUS_TAG..HEAD --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
          fi

          echo "" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            # Release ${{ steps.version.outputs.new_version }}

            ${{ steps.changelog.outputs.notes }}

            ## Installation

            ```bash
            npm install --save-dev @qastudio/playwright@${{ steps.version.outputs.new_version }}
            ```

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.version.outputs.tag }}
          draft: false
          prerelease: false
